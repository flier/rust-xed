//! automatically generated by enum_gen.py, DON't EDIT IT

use std::{
    ffi::{CStr, CString, NulError},
    fmt,
    str::FromStr,
};

use derive_more::{From, Into};

use crate::ffi;

#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, From, Into)]
pub struct Nonterminal(ffi::xed_nonterminal_enum_t);

impl Nonterminal {
    pub const INVALID: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_INVALID);

    pub const AR10: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR10);

    pub const AR11: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR11);

    pub const AR12: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR12);

    pub const AR13: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR13);

    pub const AR14: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR14);

    pub const AR15: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR15);

    pub const AR16: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR16);

    pub const AR17: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR17);

    pub const AR18: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR18);

    pub const AR19: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR19);

    pub const AR20: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR20);

    pub const AR21: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR21);

    pub const AR22: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR22);

    pub const AR23: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR23);

    pub const AR24: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR24);

    pub const AR25: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR25);

    pub const AR26: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR26);

    pub const AR27: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR27);

    pub const AR28: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR28);

    pub const AR29: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR29);

    pub const AR30: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR30);

    pub const AR31: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR31);

    pub const AR8: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR8);

    pub const AR9: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AR9);

    pub const ARAX: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ARAX);

    pub const ARBP: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ARBP);

    pub const ARBX: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ARBX);

    pub const ARCX: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ARCX);

    pub const ARDI: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ARDI);

    pub const ARDX: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ARDX);

    pub const ARSI: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ARSI);

    pub const ARSP: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ARSP);

    pub const ASZ_NONTERM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ASZ_NONTERM);

    pub const AVX512_ROUND: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AVX512_ROUND);

    pub const AVX_INSTRUCTIONS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AVX_INSTRUCTIONS);

    pub const AVX_SPLITTER: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_AVX_SPLITTER);

    pub const A_GPR_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_A_GPR_B);

    pub const A_GPR_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_A_GPR_R);

    pub const BND_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_BND_B);

    pub const BND_B_CHECK: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_BND_B_CHECK);

    pub const BND_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_BND_R);

    pub const BND_R_CHECK: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_BND_R_CHECK);

    pub const BRANCH_HINT: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_BRANCH_HINT);

    pub const BRDISP32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_BRDISP32);

    pub const BRDISP64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_BRDISP64);

    pub const BRDISP8: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_BRDISP8);

    pub const BRDISPZ: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_BRDISPZ);

    pub const CET_NO_TRACK: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_CET_NO_TRACK);

    pub const CR_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_CR_B);

    pub const CR_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_CR_R);

    pub const CR_WIDTH: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_CR_WIDTH);

    pub const DF64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_DF64);

    pub const DFV: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_DFV);

    pub const DR_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_DR_R);

    pub const ESIZE_128_BITS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ESIZE_128_BITS);

    pub const ESIZE_16_BITS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ESIZE_16_BITS);

    pub const ESIZE_1_BITS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ESIZE_1_BITS);

    pub const ESIZE_2_BITS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ESIZE_2_BITS);

    pub const ESIZE_32_BITS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ESIZE_32_BITS);

    pub const ESIZE_4_BITS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ESIZE_4_BITS);

    pub const ESIZE_64_BITS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ESIZE_64_BITS);

    pub const ESIZE_8_BITS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ESIZE_8_BITS);

    pub const EVAPX: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_EVAPX);

    pub const EVAPX_SCC: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_EVAPX_SCC);

    pub const EVEXR4_ONE: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_EVEXR4_ONE);

    pub const EVEX_INSTRUCTIONS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_EVEX_INSTRUCTIONS);

    pub const EVEX_SPLITTER: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_EVEX_SPLITTER);

    pub const FINAL_DSEG: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_DSEG);

    pub const FINAL_DSEG1: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_DSEG1);

    pub const FINAL_DSEG1_MODE64: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_FINAL_DSEG1_MODE64);

    pub const FINAL_DSEG1_NOT64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_DSEG1_NOT64);

    pub const FINAL_DSEG_MODE64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_DSEG_MODE64);

    pub const FINAL_DSEG_NOT64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_DSEG_NOT64);

    pub const FINAL_ESEG: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_ESEG);

    pub const FINAL_ESEG1: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_ESEG1);

    pub const FINAL_SSEG: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_SSEG);

    pub const FINAL_SSEG0: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_SSEG0);

    pub const FINAL_SSEG1: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_SSEG1);

    pub const FINAL_SSEG_MODE64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_SSEG_MODE64);

    pub const FINAL_SSEG_NOT64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FINAL_SSEG_NOT64);

    pub const FIX_ROUND_LEN128: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FIX_ROUND_LEN128);

    pub const FIX_ROUND_LEN512: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FIX_ROUND_LEN512);

    pub const FORCE64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_FORCE64);

    pub const GPR16_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR16_B);

    pub const GPR16_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR16_N);

    pub const GPR16_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR16_R);

    pub const GPR16_SB: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR16_SB);

    pub const GPR32_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR32_B);

    pub const GPR32_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR32_N);

    pub const GPR32_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR32_R);

    pub const GPR32_SB: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR32_SB);

    pub const GPR64_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR64_B);

    pub const GPR64_B_NORSP: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR64_B_NORSP);

    pub const GPR64_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR64_N);

    pub const GPR64_N_NORSP: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR64_N_NORSP);

    pub const GPR64_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR64_R);

    pub const GPR64_SB: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR64_SB);

    pub const GPR8_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR8_B);

    pub const GPR8_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR8_N);

    pub const GPR8_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR8_R);

    pub const GPR8_SB: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPR8_SB);

    pub const GPRV_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPRV_B);

    pub const GPRV_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPRV_N);

    pub const GPRV_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPRV_R);

    pub const GPRV_SB: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPRV_SB);

    pub const GPRY_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPRY_B);

    pub const GPRY_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPRY_R);

    pub const GPRZ_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPRZ_B);

    pub const GPRZ_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_GPRZ_R);

    pub const IGNORE66: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_IGNORE66);

    pub const IMMUNE66: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_IMMUNE66);

    pub const IMMUNE66_LOOP64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_IMMUNE66_LOOP64);

    pub const IMMUNE_REXW: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_IMMUNE_REXW);

    pub const INSTRUCTIONS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_INSTRUCTIONS);

    pub const ISA: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ISA);

    pub const MASK1: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MASK1);

    pub const MASKNOT0: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MASKNOT0);

    pub const MASK_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MASK_B);

    pub const MASK_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MASK_N);

    pub const MASK_N32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MASK_N32);

    pub const MASK_N64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MASK_N64);

    pub const MASK_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MASK_R);

    pub const MEMDISP: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MEMDISP);

    pub const MEMDISP16: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MEMDISP16);

    pub const MEMDISP32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MEMDISP32);

    pub const MEMDISP8: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MEMDISP8);

    pub const MEMDISPV: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MEMDISPV);

    pub const MMX_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MMX_B);

    pub const MMX_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MMX_R);

    pub const MODRM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MODRM);

    pub const MODRM16: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MODRM16);

    pub const MODRM32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MODRM32);

    pub const MODRM64ALT32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_MODRM64ALT32);

    pub const NELEM_EIGHTHMEM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_EIGHTHMEM);

    pub const NELEM_FULL: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_FULL);

    pub const NELEM_FULLMEM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_FULLMEM);

    pub const NELEM_GPR_READER: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_GPR_READER);

    pub const NELEM_GPR_READER_BYTE: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_NELEM_GPR_READER_BYTE);

    pub const NELEM_GPR_READER_SUBDWORD: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_NELEM_GPR_READER_SUBDWORD);

    pub const NELEM_GPR_READER_WORD: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_NELEM_GPR_READER_WORD);

    pub const NELEM_GPR_WRITER_LDOP: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_NELEM_GPR_WRITER_LDOP);

    pub const NELEM_GPR_WRITER_LDOP_D: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_NELEM_GPR_WRITER_LDOP_D);

    pub const NELEM_GPR_WRITER_LDOP_Q: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_NELEM_GPR_WRITER_LDOP_Q);

    pub const NELEM_GPR_WRITER_STORE: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_NELEM_GPR_WRITER_STORE);

    pub const NELEM_GPR_WRITER_STORE_BYTE: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_NELEM_GPR_WRITER_STORE_BYTE);

    pub const NELEM_GPR_WRITER_STORE_SUBDWORD: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_NELEM_GPR_WRITER_STORE_SUBDWORD);

    pub const NELEM_GPR_WRITER_STORE_WORD: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_NELEM_GPR_WRITER_STORE_WORD);

    pub const NELEM_GSCAT: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_GSCAT);

    pub const NELEM_HALF: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_HALF);

    pub const NELEM_HALFMEM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_HALFMEM);

    pub const NELEM_MEM128: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_MEM128);

    pub const NELEM_MOVDDUP: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_MOVDDUP);

    pub const NELEM_QUARTER: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_QUARTER);

    pub const NELEM_QUARTERMEM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_QUARTERMEM);

    pub const NELEM_SCALAR: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_SCALAR);

    pub const NELEM_TUPLE1: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_TUPLE1);

    pub const NELEM_TUPLE1_4X: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_TUPLE1_4X);

    pub const NELEM_TUPLE1_BYTE: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_TUPLE1_BYTE);

    pub const NELEM_TUPLE1_SUBDWORD: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_NELEM_TUPLE1_SUBDWORD);

    pub const NELEM_TUPLE1_WORD: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_TUPLE1_WORD);

    pub const NELEM_TUPLE2: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_TUPLE2);

    pub const NELEM_TUPLE4: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_TUPLE4);

    pub const NELEM_TUPLE8: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_NELEM_TUPLE8);

    pub const OEAX: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_OEAX);

    pub const ONE: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ONE);

    pub const ORAX: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ORAX);

    pub const ORBP: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ORBP);

    pub const ORBX: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ORBX);

    pub const ORCX: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ORCX);

    pub const ORDX: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ORDX);

    pub const ORSP: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ORSP);

    pub const OSZ_NONTERM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_OSZ_NONTERM);

    pub const OVERRIDE_SEG0: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_OVERRIDE_SEG0);

    pub const OVERRIDE_SEG1: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_OVERRIDE_SEG1);

    pub const PREFIXES: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_PREFIXES);

    pub const REFINING66: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_REFINING66);

    pub const REMOVE_SEGMENT: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_REMOVE_SEGMENT);

    pub const RFLAGS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_RFLAGS);

    pub const RIP: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_RIP);

    pub const RIPA: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_RIPA);

    pub const SAE: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_SAE);

    pub const SEG: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_SEG);

    pub const SEG_MOV: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_SEG_MOV);

    pub const SE_IMM8: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_SE_IMM8);

    pub const SIB: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_SIB);

    pub const SIB_BASE0: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_SIB_BASE0);

    pub const SIMM8: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_SIMM8);

    pub const SIMMZ: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_SIMMZ);

    pub const SRBP: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_SRBP);

    pub const SRSP: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_SRSP);

    pub const TMM_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_TMM_B);

    pub const TMM_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_TMM_N);

    pub const TMM_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_TMM_R);

    pub const TMM_R3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_TMM_R3);

    pub const UIMM16: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UIMM16);

    pub const UIMM32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UIMM32);

    pub const UIMM8: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UIMM8);

    pub const UIMM8_1: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UIMM8_1);

    pub const UIMMV: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UIMMV);

    pub const UISA_VMODRM_XMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UISA_VMODRM_XMM);

    pub const UISA_VMODRM_YMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UISA_VMODRM_YMM);

    pub const UISA_VMODRM_ZMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UISA_VMODRM_ZMM);

    pub const UISA_VSIB_BASE: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UISA_VSIB_BASE);

    pub const UISA_VSIB_INDEX_XMM: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_UISA_VSIB_INDEX_XMM);

    pub const UISA_VSIB_INDEX_YMM: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_UISA_VSIB_INDEX_YMM);

    pub const UISA_VSIB_INDEX_ZMM: Nonterminal =
        Nonterminal(ffi::XED_NONTERMINAL_UISA_VSIB_INDEX_ZMM);

    pub const UISA_VSIB_XMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UISA_VSIB_XMM);

    pub const UISA_VSIB_YMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UISA_VSIB_YMM);

    pub const UISA_VSIB_ZMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_UISA_VSIB_ZMM);

    pub const VGPR32_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR32_B);

    pub const VGPR32_B_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR32_B_32);

    pub const VGPR32_B_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR32_B_64);

    pub const VGPR32_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR32_N);

    pub const VGPR32_N_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR32_N_32);

    pub const VGPR32_N_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR32_N_64);

    pub const VGPR32_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR32_R);

    pub const VGPR32_R_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR32_R_32);

    pub const VGPR32_R_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR32_R_64);

    pub const VGPR64_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR64_B);

    pub const VGPR64_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR64_N);

    pub const VGPR64_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPR64_R);

    pub const VGPRY_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPRY_B);

    pub const VGPRY_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPRY_N);

    pub const VGPRY_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VGPRY_R);

    pub const VMODRM_XMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VMODRM_XMM);

    pub const VMODRM_YMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VMODRM_YMM);

    pub const VSIB_BASE: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VSIB_BASE);

    pub const VSIB_INDEX_XMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VSIB_INDEX_XMM);

    pub const VSIB_INDEX_YMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VSIB_INDEX_YMM);

    pub const VSIB_XMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VSIB_XMM);

    pub const VSIB_YMM: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_VSIB_YMM);

    pub const X87: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_X87);

    pub const XMM_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_B);

    pub const XMM_B3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_B3);

    pub const XMM_B3_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_B3_32);

    pub const XMM_B3_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_B3_64);

    pub const XMM_B_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_B_32);

    pub const XMM_B_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_B_64);

    pub const XMM_L_B3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_L_B3);

    pub const XMM_L_B3_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_L_B3_64);

    pub const XMM_L_R3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_L_R3);

    pub const XMM_L_R3_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_L_R3_64);

    pub const XMM_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_N);

    pub const XMM_N3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_N3);

    pub const XMM_N3_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_N3_32);

    pub const XMM_N3_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_N3_64);

    pub const XMM_N_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_N_32);

    pub const XMM_N_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_N_64);

    pub const XMM_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_R);

    pub const XMM_R3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_R3);

    pub const XMM_R3_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_R3_32);

    pub const XMM_R3_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_R3_64);

    pub const XMM_R_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_R_32);

    pub const XMM_R_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_R_64);

    pub const XMM_SE: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_SE);

    pub const XMM_SE32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_SE32);

    pub const XMM_SE64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XMM_SE64);

    pub const XOP_INSTRUCTIONS: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_XOP_INSTRUCTIONS);

    pub const YMM_B: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_B);

    pub const YMM_B3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_B3);

    pub const YMM_B3_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_B3_32);

    pub const YMM_B3_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_B3_64);

    pub const YMM_B_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_B_32);

    pub const YMM_B_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_B_64);

    pub const YMM_N: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_N);

    pub const YMM_N3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_N3);

    pub const YMM_N3_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_N3_32);

    pub const YMM_N3_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_N3_64);

    pub const YMM_N_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_N_32);

    pub const YMM_N_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_N_64);

    pub const YMM_R: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_R);

    pub const YMM_R3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_R3);

    pub const YMM_R3_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_R3_32);

    pub const YMM_R3_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_R3_64);

    pub const YMM_R_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_R_32);

    pub const YMM_R_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_R_64);

    pub const YMM_SE: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_SE);

    pub const YMM_SE32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_SE32);

    pub const YMM_SE64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_YMM_SE64);

    pub const ZMM_B3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ZMM_B3);

    pub const ZMM_B3_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ZMM_B3_32);

    pub const ZMM_B3_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ZMM_B3_64);

    pub const ZMM_N3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ZMM_N3);

    pub const ZMM_N3_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ZMM_N3_32);

    pub const ZMM_N3_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ZMM_N3_64);

    pub const ZMM_R3: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ZMM_R3);

    pub const ZMM_R3_32: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ZMM_R3_32);

    pub const ZMM_R3_64: Nonterminal = Nonterminal(ffi::XED_NONTERMINAL_ZMM_R3_64);
}

impl fmt::Display for Nonterminal {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
        f.write_str(unsafe {
            CStr::from_ptr(ffi::xed_nonterminal_enum_t2str(self.0))
                .to_str()
                .unwrap()
        })
    }
}

impl FromStr for Nonterminal {
    type Err = NulError;

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        let s = CString::new(s)?;

        Ok(Nonterminal(unsafe {
            ffi::str2xed_nonterminal_enum_t(s.as_ptr())
        }))
    }
}
